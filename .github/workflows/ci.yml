name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'diffs/**.json'
      - 'scripts/**'
      - 'data/**'
  push:
    branches: [main]
    paths:
      - 'data/**'
      - '.github/workflows/ci.yml'

permissions:
  contents: write
  pull-requests: write

jobs:
  pr-merge-export:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install jsonschema
      - name: Validate diffs
        run: |
          python - <<'PY'
          import json, glob, jsonschema
          schema = json.load(open('data/schema_diff.json', encoding='utf-8'))
          for p in glob.glob('diffs/*.json'):
              jsonschema.validate(json.load(open(p, encoding='utf-8')), schema)
          print("OK")
          PY
      - name: Compute changed diffs vs base
        id: changed
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1
          FILES="$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep '^diffs/.*\.json$' || true)"
          echo "files=$FILES" >> "$GITHUB_OUTPUT"
      - name: Merge diffs into MASTER.json
        run: |
          set -e
          for f in ${{ steps.changed.outputs.files }}; do
            python scripts/merge_diff.py "$f" data/MASTER.json
          done
      - name: Export kyphi_long.json
        run: python scripts/export_long.py data/MASTER.json docs/kyphi_long.json
      - name: Commit results back to PR branch
        run: |
          git config user.email "actions@github.com"
          git config user.name  "github-actions[bot]"
          git add data/MASTER.json docs/kyphi_long.json
          git commit -m "CI: merge & export for PR" || echo "No changes to commit"
          git push

  main-validate:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install jsonschema
      - name: Validate MASTER.json against schema_master.json
        run: |
          python - <<'PY'
          import json, jsonschema
          schema=json.load(open('data/schema_master.json',encoding='utf-8'))
          with open('data/MASTER.json',encoding='utf-8') as f:
              jsonschema.validate(json.load(f), schema)
          print("OK")
          PY
